services:
  nginx:
    container_name: nginx
    build:
      context: ./requirements/nginx
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}
      WP_HOST: ${WP_HOST}
      WP_PORT: ${WP_PORT}
    depends_on:
      mariadb:
        condition: service_healthy
      wordpress:
        condition: service_started
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    networks:
      - wp
    volumes:
      - ./volumes/wp_data:/var/www

  mariadb:
    container_name: mariadb
    build:
      context: ./requirements/mariadb
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MARIADB_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 15s
      retries: 3
    restart: unless-stopped
    ports:
      - "3306:3306"
    networks:
      - db
    volumes:
      - ./volumes/db_data:/var/lib/mysql

  wordpress:
    container_name: wordpress
    build:
      context: ./requirements/wordpress
    depends_on:
      mariadb:
        condition: service_healthy
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      WP_PORT: ${WP_PORT}
      DOMAIN_NAME: ${DOMAIN_NAME}
      WP_TITLE: ${WP_TITLE}
      WP_ADMIN_USERNAME: ${WP_ADMIN_USERNAME}
      WP_ADMIN_PASSWORD: ${WP_ADMIN_PASSWORD}
      WP_ADMIN_EMAIL: ${WP_ADMIN_EMAIL}
      WP_USER_EMAIL: ${WP_USER_EMAIL}
      WP_USER: ${WP_USER}
      WP_USER_ROLE: ${WP_USER_ROLE}
      WP_USER_PASSWORD: ${WP_USER_PASSWORD}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_HOST: ${REDIS_HOST}
    ports:
      - "9000:9000"
    restart: unless-stopped
    networks:
      - wp
      - db
    volumes:
      - ./volumes/wp_data:/var/www

  redis:
    container_name: redis
    build:
      context: ./requirements/bonus/redis
    depends_on:
      mariadb:
        condition: service_healthy
      wordpress:
        condition: service_started
      nginx:
        condition: service_started
    environment:
      REDIS_PORT: ${REDIS_PORT}
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - wp
      - db

networks:
  wp:
    driver: bridge
  db:
    driver: bridge
